// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/lterrac/edge-autoscaler/pkg/apis/edgeautoscaler/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CommunitySettingsLister helps list CommunitySettingses.
// All objects returned here must be treated as read-only.
type CommunitySettingsLister interface {
	// List lists all CommunitySettingses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CommunitySettings, err error)
	// CommunitySettingses returns an object that can list and get CommunitySettingses.
	CommunitySettingses(namespace string) CommunitySettingsNamespaceLister
	CommunitySettingsListerExpansion
}

// communitySettingsLister implements the CommunitySettingsLister interface.
type communitySettingsLister struct {
	indexer cache.Indexer
}

// NewCommunitySettingsLister returns a new CommunitySettingsLister.
func NewCommunitySettingsLister(indexer cache.Indexer) CommunitySettingsLister {
	return &communitySettingsLister{indexer: indexer}
}

// List lists all CommunitySettingses in the indexer.
func (s *communitySettingsLister) List(selector labels.Selector) (ret []*v1alpha1.CommunitySettings, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CommunitySettings))
	})
	return ret, err
}

// CommunitySettingses returns an object that can list and get CommunitySettingses.
func (s *communitySettingsLister) CommunitySettingses(namespace string) CommunitySettingsNamespaceLister {
	return communitySettingsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CommunitySettingsNamespaceLister helps list and get CommunitySettingses.
// All objects returned here must be treated as read-only.
type CommunitySettingsNamespaceLister interface {
	// List lists all CommunitySettingses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CommunitySettings, err error)
	// Get retrieves the CommunitySettings from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CommunitySettings, error)
	CommunitySettingsNamespaceListerExpansion
}

// communitySettingsNamespaceLister implements the CommunitySettingsNamespaceLister
// interface.
type communitySettingsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CommunitySettingses in the indexer for a given namespace.
func (s communitySettingsNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CommunitySettings, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CommunitySettings))
	})
	return ret, err
}

// Get retrieves the CommunitySettings from the indexer for a given namespace and name.
func (s communitySettingsNamespaceLister) Get(name string) (*v1alpha1.CommunitySettings, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("communitysettings"), name)
	}
	return obj.(*v1alpha1.CommunitySettings), nil
}
